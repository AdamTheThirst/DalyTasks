# Задача 3: **Парсер логов**
# **Уровень:** Мидл
#
# **Описание задачи:**
# Вам нужно написать функцию `parse_logs(logs: str) -> dict`, которая принимает строку с логами и возвращает словарь, где ключи — это уникальные IP-адреса, а значения — количество их упоминаний в логах.
#
# **Пример:**
# ```python
# logs = """
# 192.168.0.1 - User1
# 192.168.0.2 - User2
# 192.168.0.1 - User3
# 192.168.0.3 - User4
# 192.168.0.1 - User5
# """
# result = parse_logs(logs)
# print(result)  # {'192.168.0.1': 3, '192.168.0.2': 1, '192.168.0.3': 1}
# ```
#
# **Требования:**
# - IP-адреса всегда имеют формат `X.X.X.X`, где X — число от 0 до 255.
# - Логи могут быть большими, поэтому оптимизируйте код.

from collections import defaultdict

logs = """
192.168.0.1 - User1
192.168.0.2 - User2
192.168.0.1 - User3
192.168.0.3 - User4
192.168.0.1 - User5
"""

def parse_logs(logs:str) -> dict:
    result = defaultdict(int)

    for log in logs.split('\n'):
        if log != '':
            result[log.split(' - ')[0]] += 1

    return result


result = parse_logs(logs)
print(result)  # {'192.168.0.1': 3, '192.168.0.2': 1, '192.168.0.3': 1}
